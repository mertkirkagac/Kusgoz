{"version":3,"sources":["./src/app/login/login.page.html","./src/app/_helpers/customValidators.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["module.exports = \"\\n\\n\\n<ion-content  padding class=\\\"scroll-content\\\"  >\\n    <div  class=\\\"loginLogoPoint\\\" fxLayout=\\\"row\\\"  fxLayout.lt-sm=\\\"row\\\" fxLayout.lt-xs=\\\"row\\\" fxLayout.lt-md=\\\"row\\\"  >\\n        <div  fxFlex=\\\"100%\\\"  >\\n    \\n        </div>\\n         <div  fxFlex=\\\"100%\\\" >\\n          <div  fxLayout=\\\"row\\\" style=\\\"margin-top: 2rem\\\"  >\\n            <a class=\\\"navbar-brand\\\"  >\\n              <img   alt=\\\"logo\\\" src=\\\"../../assets/images/LOGO.JPG\\\">\\n          </a> \\n          </div>\\n        </div>\\n        <div  fxFlex=\\\"100%\\\" >\\n    \\n        </div>\\n       \\n       \\n     \\n      </div>\\n  <div class=\\\"Container-smp\\\">\\n  \\n  <div  class=\\\"loginFormPoint\\\" fxLayout=\\\"row\\\"  fxLayout.lt-sm=\\\"row\\\" fxLayout.lt-xs=\\\"row\\\" fxLayout.lt-md=\\\"row\\\"  >\\n    <div  fxFlex=\\\"100%\\\"  >\\n\\n    </div>\\n     <div  fxFlex=\\\"100%\\\" >\\n      <div  fxLayout=\\\"row\\\" >\\n     \\n       \\n          <form [formGroup]=\\\"LoginForm\\\" autocomplete=\\\"off\\\"    style=\\\"display: grid;\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    \\n\\n      \\n            <mat-form-field class=\\\"FormFieldLogin \\\" >\\n              <mat-icon matSuffix>mode_edit</mat-icon>\\n                <input matInput   type=\\\"text\\\" formControlName=\\\"Tc\\\"    maxlength=\\\"11\\\" placeholder=\\\"TC Kimlik\\\" >\\n                   \\n              </mat-form-field>\\n              <div *ngIf=\\\"editLF.Tc.touched && !editLF.Tc.valid\\\">\\n      \\n                <small style=\\\"color:#f15c2d;font-weight: bold;\\\"  *ngIf=\\\"editLF.Tc.errors.required\\\">\\n                -  TC Alanı Zorunludur .\\n                </small>\\n                <small style=\\\"color:#ff704d ;font-weight: bold\\\" *ngIf=\\\"editLF.Tc.errors.TcValidation\\\">\\n                  - Tc Kimlik Formatına Uymuyor.\\n                 </small>\\n             \\n                 \\n            </div>\\n            <mat-form-field   class=\\\"form-field-trade FormFieldLogin \\\" >\\n      \\n            <input matInput  type=\\\"password\\\" formControlName=\\\"password\\\" placeholder=\\\"Şifre \\\" >\\n            \\n          </mat-form-field>\\n          <div *ngIf=\\\"editLF.password.touched && !editLF.password.valid\\\">\\n \\n              <small style=\\\"color:#f15c2d;font-weight: bold;\\\"   *ngIf=\\\"editLF.password.errors.required\\\">\\n              - Şifre Alanı Zorunludur .\\n              </small>\\n      \\n          </div>\\n                   \\n            <div>\\n                    <button mat-stroked-button  class=\\\"Login-btn\\\" type=\\\"submit\\\"  color=\\\"primary\\\" >Giriş</button>\\n                    <!-- <div  style=\\\"margin-top: 5%\\\">\\n                      <div  fxFlex=\\\"100%\\\" >\\n                        <a  routerLink=\\\"/forgotpassword\\\" style=\\\"\\n                        color: #f9b839;\\\"> Şifremi unuttum</a>\\n                      </div>\\n                  \\n                 \\n              </div>    -->\\n                  \\n     \\n      \\n              </div>\\n      \\n          </form>\\n     \\n   \\n      </div>\\n    </div>\\n    <div  fxFlex=\\\"100%\\\" >\\n\\n    </div>\\n   \\n   \\n \\n  </div>\\n </div>\\n</ion-content>\\n\\n\"","import { AbstractControl, ValidationErrors } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { AuthenticationService } from '../_services/authentication.service';\n@Injectable({\n    providedIn: 'root'\n})\nexport class myValidators {\n\n    \n  \n    constructor(private authenticationService: AuthenticationService) {\n\n\n    }\n    \n    static cannotContainSpace(control: AbstractControl): ValidationErrors | null {\n        if (control.value != null) {\n            if ((control.value as string).indexOf(' ') >= 0 ||\n                (control.value as string).indexOf('ö') >= 0 || \n                (control.value as string).indexOf('Ö') >= 0 ||\n                (control.value as string).indexOf('ğ') >= 0 ||\n                (control.value as string).indexOf('Ğ') >= 0 ||\n                (control.value as string).indexOf('ü') >= 0 ||\n                (control.value as string).indexOf('Ü') >= 0 ||\n                (control.value as string).indexOf('ç') >= 0 ||\n                (control.value as string).indexOf('Ç') >= 0 ||\n                (control.value as string).indexOf('ş') >= 0 ||\n                (control.value as string).indexOf('Ş') >= 0\n                ) {\n                return { cannotContainSpace: true };\n            }else if ((control.value as string).indexOf('.') < 1) {\n                return { cannotContainSpace: true };\n            }\n            return null;\n        }\n\n\n    }\n    static invalidCost(control: AbstractControl): ValidationErrors | null {\n        if (control.value != null) {\n            if ((control.value as string).indexOf(' ') >= 0 ||\n                (control.value as string).indexOf('ö') >= 0 || \n                (control.value as string).indexOf('Ö') >= 0 ||\n                (control.value as string).indexOf('ğ') >= 0 ||\n                (control.value as string).indexOf('Ğ') >= 0 ||\n                (control.value as string).indexOf('ü') >= 0 ||\n                (control.value as string).indexOf('Ü') >= 0 ||\n                (control.value as string).indexOf('ç') >= 0 ||\n                (control.value as string).indexOf('Ç') >= 0 ||\n                (control.value as string).indexOf('ş') >= 0 ||\n                (control.value as string).indexOf('Ş') >= 0 ||\n                (control.value as string).split(\".\").length - 1>1\n                ) {\n                return { invalidCost: true };\n            }\n            return null;\n        }\n\n\n    }\n    static passwordConfirming(c: AbstractControl): any {\n        if (!c.parent || !c) { return; }\n        const pwd = c.parent.get('ReqPassword');\n        const cpwd = c.parent.get('ReqPasswordConfirm');\n\n        if (!pwd || !cpwd) { return; }\n        if (pwd.value !== cpwd.value) {\n            return { invalid: true };\n\n        }\n    }\n    static passwordConfirmingForReset(c: AbstractControl): any {\n        if (!c.parent || !c) { return; }\n        const pwd = c.parent.get('Password');\n        const cpwd = c.parent.get('ConfirmPassword');\n\n        if (!pwd || !cpwd) { return; }\n        if (pwd.value !== cpwd.value) {\n            return { invalid: true };\n\n        }\n    }\n   \n    static InvalidValue(control: AbstractControl): ValidationErrors | null {\n     \n            if (+control.value  < 0 ||control.value  ==\"\" ||control.value  ==undefined || control.value==Infinity || control.value == NaN ||+control.value  == 0) {\n                return { InvalidValue: true };\n            }\n            \n        \n\n\n    }\n\n    static TcValidation(control: AbstractControl): ValidationErrors | null{\n\n        if (control.value != null) {\n            if ((control.value as string).indexOf(' ') >= 0) {\n                          \n                return { TcValidation: true };\n            \n            }else if ((control.value as string).length != 11 ) {\n                return { TcValidation: true };\n            }\n           \n            return null;\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPage } from './login.page';\nimport { SharedModule } from '../shared.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes),\n    SharedModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","module.exports = \".scroll-content {\\n  overflow: hidden !important;\\n}\\n\\n.Login-btn.mat-stroked-button.mat-primary {\\n  width: 100%;\\n  color: white !important;\\n  border-color: #87cefa;\\n  background-color: #6fa237;\\n}\\n\\n.Container-smp {\\n  display: -webkit-box;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n          flex-direction: column;\\n  word-wrap: break-word;\\n  background-color: #fcfefb;\\n  background-clip: border-box;\\n  margin: 0 auto;\\n  position: relative;\\n  box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.1);\\n  border-radius: 3px;\\n  min-height: 390px;\\n  padding: 2rem;\\n  margin-top: 20%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9pZGVha3RpZm1hYy9EZXNrdG9wL1Byb2plY3RzL3JlcG8vUHVhbnRhaiBBcHAvc3JjL2FwcC9sb2dpbi9sb2dpbi5wYWdlLnNjc3MiLCJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQztFQUNHLDJCQUFBO0FDQ0o7O0FERVE7RUFJSSxXQUFBO0VBQ0EsdUJBQUE7RUFDQSxxQkFBQTtFQUNGLHlCQUFBO0FDRlY7O0FEUUE7RUFDSSxvQkFBQTtFQUFBLGFBQUE7RUFDQSw0QkFBQTtFQUFBLDZCQUFBO1VBQUEsc0JBQUE7RUFDQSxxQkFBQTtFQUNBLHlCQUFBO0VBQ0EsMkJBQUE7RUFDQSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSwwQ0FBQTtFQUNBLGtCQUFBO0VBQ0gsaUJBQUE7RUFDQSxhQUFBO0VBQ0csZUFBQTtBQ0xKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiIC5zY3JvbGwtY29udGVudHtcbiAgICBvdmVyZmxvdzogaGlkZGVuICFpbXBvcnRhbnQ7XG59XG5cbiAgICAgICAgLkxvZ2luLWJ0bi5tYXQtc3Ryb2tlZC1idXR0b24ubWF0LXByaW1hcnkge1xuICBcbiAgICBcbiAgICBcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgY29sb3I6d2hpdGUgIWltcG9ydGFudDtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogIzg3Y2VmYTtcbiAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNmZhMjM3O1xuICAgICAgICAgICBcbiAgICAgICAgIH1cblxuXG5cbi5Db250YWluZXItc21we1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZjZmVmYjtcbiAgICBiYWNrZ3JvdW5kLWNsaXA6IGJvcmRlci1ib3g7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGJveC1zaGFkb3c6IDAgMXB4IDVweCAwIHJnYmEoMCwwLDAsLjEpO1xuICAgIGJvcmRlci1yYWRpdXM6IDNweDtcblx0bWluLWhlaWdodDogMzkwcHg7XG5cdHBhZGRpbmc6IDJyZW07XG4gICAgbWFyZ2luLXRvcDogMjAlO1xufSIsIi5zY3JvbGwtY29udGVudCB7XG4gIG92ZXJmbG93OiBoaWRkZW4gIWltcG9ydGFudDtcbn1cblxuLkxvZ2luLWJ0bi5tYXQtc3Ryb2tlZC1idXR0b24ubWF0LXByaW1hcnkge1xuICB3aWR0aDogMTAwJTtcbiAgY29sb3I6IHdoaXRlICFpbXBvcnRhbnQ7XG4gIGJvcmRlci1jb2xvcjogIzg3Y2VmYTtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzZmYTIzNztcbn1cblxuLkNvbnRhaW5lci1zbXAge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmY2ZlZmI7XG4gIGJhY2tncm91bmQtY2xpcDogYm9yZGVyLWJveDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm94LXNoYWRvdzogMCAxcHggNXB4IDAgcmdiYSgwLCAwLCAwLCAwLjEpO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIG1pbi1oZWlnaHQ6IDM5MHB4O1xuICBwYWRkaW5nOiAycmVtO1xuICBtYXJnaW4tdG9wOiAyMCU7XG59Il19 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { AuthenticationService } from '../_services/authentication.service';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { NavController, AlertController } from '@ionic/angular';\nimport { AppError } from '../_helpers/app-error';\nimport { Storage } from '@ionic/storage';\nimport { PersonelModel } from '../_models/UserModel';\nimport { myValidators } from '../_helpers/customValidators';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n\n \n  LoginForm:FormGroup\n  constructor(   \n     private alertController: AlertController, \n     private fb :FormBuilder , \n     private authenticationService :AuthenticationService,\n     private storage: Storage,\n     private toastr:ToastrService,\n     private navCtrl:NavController) {\n    this.LoginForm= this.fb.group({\n    \n        Tc: ['', Validators.compose([\n  \n        myValidators.TcValidation\n        ])], \n      password: ['',Validators.compose([\n        Validators.required,      \n       \n      ])],\n    \n    });\n\n\n\n   }\n\n   get editLF() { return this.LoginForm.controls; }\n  ngOnInit() {\n  }\n \n  \n\n  onSubmit() {\n   \n     this.authenticationService.getToken(this.editLF.Tc.value, this.editLF.password.value).subscribe((data:PersonelModel) => {\n   \n  \n          this.storage.set('currentUser', JSON.stringify(data));\n          this.navCtrl.navigateRoot('/home');\n        \n        \n     }, (error: AppError) => {\n      this.presentAlert(\"Kullanıcı Bilgileri Hatalı. - \"+JSON.stringify(error));\n     });\n \n \n \n }\n\n \n\n\n async presentAlert(reason) {\n  const alert = await this.alertController.create({\n      header:  'Uyarı',\n      subHeader: '',\n      message: reason,\n      buttons: ['Tamam']\n  });\n\n  await alert.present();\n}\n}\n"],"sourceRoot":""}